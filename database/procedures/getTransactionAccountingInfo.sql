DROP PROCEDURE IF EXISTS getTransactionAccountingInfo;
DELIMITER //
CREATE PROCEDURE `getTransactionAccountingInfo`(transactionid bigint, tr_purpose_id int)
BEGIN
    DECLARE id int;
    DECLARE hasWithholdingTax double;
    set @id := 0;
 
    SELECT t.WITHHOLDING_TAX INTO hasWithholdingTax FROM TRANSACTION t WHERE t.ID = transactionid;
 
	IF hasWithholdingTax > 0  THEN
		SELECT  @id := @id + 1 as SROID, CONCAT(b2.NAME, IF(b.cash_type = 1, " - cash","- pettycash")) as ACCOUNTING_NAME,b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_BRANCH_CASH b
		JOIN BRANCH b2 ON b2.id = b.BRANCH_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID, CONCAT(b2.NAME," - bank") as ACCOUNTING_NAME,b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_BRANCH_BANK b
			JOIN BRANCH b2 ON b2.id = b.BRANCH_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID, s.NAME  as ACCOUNTING_NAME, b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_COAITEMS b
			JOIN SPECIFICS s ON b.TRANSACTION_SPECIFICS = s.ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID,  s.NAME  as ACCOUNTING_NAME, b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_DISCOUNT b
			JOIN SPECIFICS s ON b.TRANSACTION_SPECIFICS = s.ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID, CONCAT(t.NAME, "-",t2.NAME)  as ACCOUNTING_NAME , b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_INTER_BRANCH b
			JOIN BRANCH t ON t.id = b.FROM_BRANCH_ID AND t.id = b.TO_BRANCH_ID
			JOIN BRANCH t2 ON t2.id = b.TO_BRANCH_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID, t.TAX_NAME as ACCOUNTING_NAME, b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_TAXES b
			JOIN BRANCH_TAXES t ON t.id = b.BRANCH_TAXESID AND t.BRANCH_ORGANIZATION_ID = b.BRANCH_ORGNIZATION_ID AND t.BRANCH_ID = b.BRANCH_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID,  s.NAME  as ACCOUNTING_NAME, b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_TAXES b
		JOIN SPECIFICS s ON s.ID = b.BRANCH_TAXESID  AND s.ORGANIZATION_ID = b.BRANCH_ORGNIZATION_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id 
		AND s.account_code_hirarchy NOT LIKE '/1000000000000000000/%' AND s.account_code_hirarchy NOT LIKE '/2000000000000000000/%'
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID, s.NAME as ACCOUNTING_NAME, b.CREDIT_AMOUNT, b.DEBIT_AMOUNT FROM TRIALBALANCE_VENDOR_ADVANCE b
			JOIN VENDOR s ON s.id = b.VENDOR_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID, s.NAME  as ACCOUNTING_NAME, b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_VENDOR_CUSTOMER b
			JOIN VENDOR s ON s.id = b.VENDOR_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id;
  ELSE
		SELECT  @id := @id + 1 as SROID, CONCAT(b2.NAME, IF(b.cash_type = 1, " - cash","- pettycash")) as ACCOUNTING_NAME,b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_BRANCH_CASH b
			JOIN BRANCH b2 ON b2.id = b.BRANCH_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID, CONCAT(b2.NAME," - bank") as ACCOUNTING_NAME,b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_BRANCH_BANK b
			JOIN BRANCH b2 ON b2.id = b.BRANCH_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID, s.NAME  as ACCOUNTING_NAME, b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_COAITEMS b
			JOIN SPECIFICS s ON b.TRANSACTION_SPECIFICS = s.ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID,  s.NAME  as ACCOUNTING_NAME, b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_DISCOUNT b
			JOIN SPECIFICS s ON b.TRANSACTION_SPECIFICS = s.ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID, CONCAT(t.NAME, "-",t2.NAME)  as ACCOUNTING_NAME , b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_INTER_BRANCH b
			JOIN BRANCH t ON t.id = b.FROM_BRANCH_ID AND t.id = b.TO_BRANCH_ID
			JOIN BRANCH t2 ON t2.id = b.TO_BRANCH_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
 
		UNION ALL
 
		SELECT @id := @id + 1 as SROID, t.TAX_NAME as ACCOUNTING_NAME, b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_TAXES b
			JOIN BRANCH_TAXES t ON t.id = b.BRANCH_TAXESID AND t.BRANCH_ORGANIZATION_ID = b.BRANCH_ORGNIZATION_ID AND t.BRANCH_ID = b.BRANCH_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
		UNION ALL
 
		SELECT @id := @id + 1 as SROID, s.NAME as ACCOUNTING_NAME, b.CREDIT_AMOUNT, b.DEBIT_AMOUNT FROM TRIALBALANCE_VENDOR_ADVANCE b
			JOIN VENDOR s ON s.id = b.VENDOR_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id
 
		UNION ALL
 
 
		SELECT @id := @id + 1 as SROID, s.NAME  as ACCOUNTING_NAME, b.CREDIT_AMOUNT,b.DEBIT_AMOUNT FROM TRIALBALANCE_VENDOR_CUSTOMER b
			JOIN VENDOR s ON s.id = b.VENDOR_ID
		WHERE b.TRANSACTION_ID = transactionid AND b.TRANSACTION_PURPOSE = tr_purpose_id;
    END IF;
  END//
DELIMITER ;
