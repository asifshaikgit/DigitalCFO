# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
	
# Home page
GET     /home                                       controllers.Assets.at(path="/public", file="home/index.html")
GET     /                                           controllers.ApplicationController.registration()
GET     /more                                       controllers.ApplicationController.more()
GET     /idos:soption                               controllers.ApplicationController.selectedOption(soption : Integer)
GET     /casestudies:soption                        controllers.ApplicationController.selectedOption(soption : Integer)

GET     /ws                                         controllers.HelloWS.sayHello()

#POST    /                                          controllers.ApplicationController.registration()
GET     /about                                      controllers.ApplicationController.aboutUs()
GET     /contact                                    controllers.ApplicationController.contactUs()
GET     /products                                   controllers.ApplicationController.pricing()
GET     /lastmile                                   controllers.ApplicationController.lastMile()
GET     /requestdemo                                controllers.ApplicationController.requestDemo()
GET     /reg                                        controllers.ApplicationController.reg()
GET     /lenovo                                     controllers.ApplicationController.gstKnowledge()
GET     /privacy                                    controllers.ApplicationController.privacy()
GET     /terms                                      controllers.ApplicationController.terms()
GET     /register                                   controllers.ApplicationController.register(source :String,req:Request )
GET     /signUp                                     controllers.ApplicationController.signUp(req:Request)
+ nocsrf
GET     /signIn                                     controllers.ApplicationController.signIn(req:Request)
GET     /userVerification                           controllers.ApplicationController.verifyUser(req:Request)
POST    /verification                               controllers.SecurityController.verification(req: Request)
POST    /resendsecuritycode                         controllers.SecurityController.resendMail(req: Request)
#GET    /forgotPassword                             controllers.Application.forgotPassword()

GET     /myadmin                                    controllers.SecurityController.idosAdmin()
GET     /demoexp                                    controllers.SecurityController.demoExpired()
GET     /saledata                                   controllers.paging.OrganizationPageController.index()
GET     /orglist                                    controllers.paging.OrganizationPageController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")

GET     /resend                                     controllers.ApplicationController.resend()
POST    /resend/accountActivationLink               controllers.Application.resendActivationLink(req: Request)
GET     /activate                                   controllers.ApplicationController.activate(corporateEmail:String,req:Request)
GET     /customerVendorAccount                     controllers.RequestHandlerController.handleRequest(req:Request)
GET     /reset                                      controllers.ApplicationController.resetAccount(email:String,req:Request)
+ nocsrf
POST    /login                                      controllers.SecurityController.login(req: Request)
POST    /ssoLogin                                      controllers.SecurityController.ssoLogin(req: Request)
GET     /pwdexpsuccess                              controllers.SecurityController.pwdExpiredSuccess()
+ nocsrf
POST    /verify                                     controllers.SecurityController.verifyCaptcha(req: Request)
POST    /sellerlogin                                controllers.SecurityController.loginSeller(req: Request)
GET     /seller                                     controllers.ApplicationController.Seller()
#OPTIONS /login                                     controllers.Application.allow()
POST    /subslogin                                  controllers.UserController.subslogin(req:Request)
+ nocsrf
POST    /logout                                     controllers.UserController.logout(req:Request)
GET     /signout                                    controllers.SecurityController.signOut()
GET     /signoutsllr                                controllers.SecurityController.signOutSeller()
GET     /forgotpwdresetsuccess                      controllers.SecurityController.forgotPwdResetSuccess()
POST    /sllrlogout                                 controllers.SellerController.sellerLogout(req:Request)
POST    /vendorlogout                               controllers.VendorController.vendorLogout(req:Request)
GET     /config/getsessionuser                      controllers.Application.configUserInSession(req: Request)
GET     /chngPwdByAdmin                             controllers.ApplicationController.changePassword()
GET     /accountChanged                             controllers.UserController.accountChanged(req:Request)
POST    /forgotlogininfo                            controllers.ApplicationController.forgotLoginInfo(req:Request)
POST    /sellerforgotlogininfo                      controllers.ApplicationController.sellerForgotLoginInfo(req:Request)
POST    /account/resetVendorAccount                 controllers.UserController.forgotCustVendLoginInfo(req:Request)
POST    /account/loginVendorAccount                 controllers.SecurityController.custVendLogin(req: Request)
GET     /config                                     controllers.ApplicationController.configuration(req: Request)
GET     /termsAndConditions                         controllers.SecurityController.showTermsAndConditions(req: Request)
POST    /agreeTermsAndConditions                    controllers.AgreementController.agreedTermsAndConditions(req: Request)
GET     /generalFAQ                                 controllers.ApplicationController.generalFaq()
GET     /setupFAQ                                   controllers.ApplicationController.setupFaq()
GET     /vendCustConfig                             controllers.ApplicationController.vendcustconfiguration()
GET     /alertPremiseValidity                       controllers.Application.branchalertsconfiguration()
GET     /alertStatutoryValidity                     controllers.Application.branchstatalertsconfiguration()
GET     /alertOperationalRemainderValidity          controllers.Application.branchoperremalertsconfiguration()
GET     /alertBranchPolicyValidity                  controllers.Application.branchpolicyalertsconfiguration()
POST    /config/setPageUser                         controllers.Application.saveUserInfoInSession(req: Request)
GET     /cashconfig                                controllers.RequestHandlerController.handleRequest(req:Request)
GET     /account                                    controllers.RequestHandlerController.handleRequest(req:Request)
GET     /expense/getexpdatas                        controllers.RequestHandlerController.handleRequest(req:Request)
GET     /expenseslist                               controllers.RequestHandlerController.handleRequest(req:Request)
GET     /expenses/particulars                       controllers.RequestHandlerController.handleRequest(req:Request)
GET     /expenses/allspecifics                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /expenses/specifics                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /expenses/vendors                           controllers.RequestHandlerController.handleRequest(req:Request)
POST    /expenses/getExpense                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /expenses/submitforapproval                 controllers.ExpenseController.submitForApproval(req:Request)
POST    /expenses/approveStatus                     controllers.ExpenseController.approveStatus(req:Request)
POST    /expenses/rejectStatus                      controllers.ExpenseController.rejectStatus(req:Request)
POST    /expenses/completeAccounting                controllers.ExpenseController.completeAccounting(req:Request)
POST    /expenses/additionalApproval                controllers.ExpenseController.additionalApproval(req:Request)
POST    /expenses/sendMail                          controllers.ExpenseController.sendMail(req:Request)
GET     /users/getroles                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /users/changeRole                           controllers.UserController.changeRole(req:Request)
POST    /user/ChangePassword                        controllers.UserController.changePassword(req:Request)
POST    /user/resetPassword                         controllers.ApplicationController.resetPassword(req: Request)
POST    /user/resetaccount                          controllers.Application.resetUserAccount(req: Request)
POST    /users/checkemail                           controllers.ApplicationController.checkEmail(req: Request)
POST    /user/getUserAdvClaim                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/saveUserAdvClaim                      controllers.UserController.saveOpeningBalanceAdvClaim(req:Request)

GET     /get/userexpenses/:ruleType/:selectedEmail                  controllers.UserSetupCoaController.getCoaExpenseItems(ruleType :Integer, selectedEmail :String,req:Request)
GET     /get/userincomes/:ruleType/:selectedEmail                   controllers.UserSetupCoaController.getCoaIncomeItems(ruleType :Integer, selectedEmail :String,req:Request)
GET     /get/userassets/:ruleType/:selectedEmail                    controllers.UserSetupCoaController.getCoaAssetsItems(ruleType :Integer, selectedEmail :String,req:Request)
GET     /get/userliabilities/:ruleType/:selectedEmail               controllers.UserSetupCoaController.getCoaLiabilitiesItems(ruleType :Integer, selectedEmail :String,req:Request)
GET     /search/useritems/:particular/:ruleType/:searchText/:selectedEmail  controllers.UserSetupCoaController.seachTxnUserItems(particular :Integer, ruleType :Integer, searchText :String, selectedEmail :String,req:Request)

POST    /expenses/deleteExpense                                     controllers.ExpenseController.deleteExpenses(req:Request)
POST    /particulars/addParticular                                  controllers.ParticularController.saveParticular(req:Request)
POST    /specifics/addSpecifics                                     controllers.RequestHandlerController.handleRequest(req:Request)
POST    /specifics/disableSpecifics                                 controllers.SpecificsController.disableSpecifics(req:Request)
POST    /specifics/checkBarcode                                     controllers.SpecificsController.checkBarcode(req:Request)
POST    /vendor/addVendor                                           controllers.RequestHandlerController.handleRequest(req:Request)
POST    /vendor/addVendorGroup                                      controllers.VendorController.saveVendorGroup(req:Request)
POST    /vendor/listVendorGroup                                     controllers.RequestHandlerController.handleRequest(req:Request)
POST    /vendor/vendorGroupDetails                                  controllers.VendorController.vendorGroupDetails(req:Request)
POST    /customer/addCustomer                                       controllers.CustomerController.saveCustomer(req:Request)
POST    /customer/addCustomerGroup                                  controllers.CustomerController.saveCustomerGroup(req:Request)
POST    /customer/listCustomerGroup                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /customer/getCustomerListForBranch                          controllers.RequestHandlerController.handleRequest(req:Request)
POST    /customer/getCustomerListForBranchAndTypeOfSuply            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /customer/getOpenignBalAdvCustomer                          controllers.RequestHandlerController.handleRequest(req:Request)
POST    /customer/checkIfCustomerCreditLimitExceeded                controllers.RequestHandlerController.handleRequest(req:Request)
POST    /customer/customerSalesMonthWiseItemsData                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /vendor/customerGroupDetails                                controllers.RequestHandlerController.handleRequest(req:Request)

GET     /customer/getshipaddress/:entityTxnId                       controllers.CustomerController.getShippingAddress(entityTxnId: Long,req:Request)
GET     /customer/walkincustomer/:name                              controllers.CustomerController.getWalkinCustomerLocations(name : String,req:Request)
GET     /vendor/walkinvendor/:name                                  controllers.VendorController.getWalkinVendorLocations(name: String,req:Request)

POST    /customer/updateshipping                                    controllers.CustomerController.updateCustomerShippingDetail(req:Request)
POST    /customer/customerlocations                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /vendor/vendorlocations                                     controllers.RequestHandlerController.handleRequest(req:Request)
GET     /expenses/getExpenseDetails                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /expense/showExpenseDetails                                 controllers.ExpenseController.showExpenseDetails(req:Request)
POST    /expenses/partBasedDetails                                  controllers.ExpenseController.partBasedDetails(req:Request)
POST    /config/addOrganization                                     controllers.ApplicationController.addOrganization(req: Request)
POST    /config/updateOrganization                                  controllers.ConfigurationController.updateOrganization(req:Request)
POST    /config/addOrganizationDetails                              controllers.ConfigurationController.saveOrUpdateOrganizationDetails(req:Request)
POST    /config/uploadcoact/:coaUploadType                          controllers.ChartOfAccountsController.uploadChartOfAccount(coaUploadType: Integer,req:Request)
POST    /config/removeOrganization                                  controllers.ConfigurationController.removeOrganization(req:Request)
GET     /config/getorgdatas                                         controllers.RequestHandlerController.handleRequest(req:Request)
GET     /config/getcurrcountry                                      controllers.RequestHandlerController.handleRequest(req:Request)
GET     /config/showChartOFAccount                                  controllers.RequestHandlerController.handleRequest(req:Request)
GET     /config/getorg                                              controllers.RequestHandlerController.handleRequest(req:Request)
POST     /config/getCompanyOrgList                                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/showTranCombSalesItemsWithTaxes                controllers.RequestHandlerController.handleRequest(req:Request)
POST    /orgnization/orgGstSerials                                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/checkIfCombinationSalesIncomeItem                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/getListOfCombinationSalesItems                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getCompanyTemplate                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/validateTxnRefNo                               controllers.RequestHandlerController.handleRequest(req:Request)
GET     /orgsalesdata1s3d5                                           controllers.RequestHandlerController.handleRequest(req:Request)
GET     /organization/getallorg                                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /orgnization/savegstserial                                  controllers.OrganizationController.saveOrgGstinSerialNumber(req:Request)
POST    /orgnization/saveserial                                     controllers.OrganizationController.saveOrgSerialNumber(req:Request)
POST    /orgnization/uploadlogo/:orgid                              controllers.OrganizationController.uploadOrgLogo(orgid: Long,req:Request)
POST    /orgnization/savePosType                                    controllers.OrganizationController.savePlaceOfSupplyType(req:Request)
POST    /config/addBranch                                           controllers.ConfigurationController.addBranch(req: Request)
POST    /config/removeBranch                                        controllers.ConfigurationController.removeBranch(req:Request)
POST    /config/addRole                                             controllers.ConfigurationController.addRole(req:Request)
POST    /config/removeRole                                          controllers.ConfigurationController.removeRole(req:Request)
POST    /config/removeCategory                                      controllers.ConfigurationController.removeCategory(req:Request)
POST    /config/removeItem                                          controllers.ConfigurationController.removeItem(req:Request)
POST    /config/removeVendor                                        controllers.ConfigurationController.removeVendor(req:Request)
POST    /config/addUser                                             controllers.ConfigurationController.addUser(req:Request)
POST    /config/removeUser                                          controllers.ConfigurationController.removeUser(req:Request)
POST    /config/CreateProject                                       controllers.ConfigurationController.createProject(req:Request)
POST    /config/removeProject                                       controllers.ConfigurationController.removeProject(req:Request)
POST    /user/savetheme                                             controllers.UIThemeController.saveUserTheme(req:Request)
POST    /user/userDetails                                           controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/txnrule                                               controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/addUpdateTaxes                                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/compLogo                                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/categoryDetails                                     controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/itemDetails                                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/getBranchTax                                        controllers.RequestHandlerController.handleRequest(req:Request)
GET     /config/getConfig                                           controllers.RequestHandlerController.handleRequest(req:Request)
GET     /branch/getAllBranchDetails                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/projectDetails                                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/vendorDetails                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/customerDetails                                     controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/branchDetails                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /expense/getTax                                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /expenses/getcost                                           controllers.RequestHandlerController.handleRequest(req:Request)
POST    /expense/getLibrary                                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/addUserRoleSpec                                     controllers.ConfigurationController.addUserRoleSpec(req:Request)
POST    /config/removeUserRoleSpec                                  controllers.ConfigurationController.removeUserRoleSpec(req:Request)
POST    /config/newAdmin                                            controllers.UserController.configureNewAdmin(req:Request)


GET     /config/Specifics/checkDuplicacy/:name/:headType            controllers.SpecificsController.checkForDuplicacy(name: String, headType: String,req:Request)
GET     /config/Branch/checkDuplicacy/:name                         controllers.BranchController.checkForDuplicacy(name: String,req: Request)
GET     /config/Project/checkDuplicacy/:name                        controllers.ProjectController.checkForDuplicacy(name: String, req: Request)
GET     /tax/branchInputTaxes/:branch                               controllers.GstTaxController.getInputTaxList4Branch(branch: Long,req:Request)
GET     /coa/getInterBranch/:mappingid                              controllers.InterbranchController.getInterBranchDetail(mappingid: Long,req:Request)
GET     /tax/getBranchOpeningAmt/:branchTaxId                       controllers.GstTaxController.getBranchTaxOpeningBalance(branchTaxId: Long,req:Request)
GET     /tax/getintaxes/:branchId                                       controllers.RequestHandlerController.handleFileRequest(req: Request, branchId: String)
POST    /specifics/downloadOrgCOATemplate/:particular                   controllers.SpecificsController.downloadOrgCOATemplate(particular: Integer,req:Request)
GET     /specifics/isSpecificExists/:idDataValidation/:parentaccountCode    controllers.SpecificsController.isSpecificExists(idDataValidation: Integer, parentaccountCode: String,req:Request)
GET        /activate/apiAccess/:email/:key                                  controllers.Application.activateApiAccess(req: Request, email: String, key: String)
GET        /analytics/vendorSeller/:email                                   controllers.AnalyticsController.getVendorSellerAnalytics(email: String)
GET        /cashnbank/getData/:id/:type                                     controllers.CashAndBankController.getData(req: Request, id: String, type: String)
GET     /vendorcustomer/branchProject/:orgId                                controllers.VendorController.getBranchProject(req: Request, orgId: Long)
GET     /vendorcustomer/getItems/:orgId/:type                               controllers.VendorController.getSpecifics(req: Request, orgId: Long, type: Integer)
GET        /get/claimCountries/:type/:name                                  controllers.ClaimController.getCountries(req: Request,type: Integer, name: String)



POST    /config/changeLabel                                         controllers.ConfigurationController.changePageLabel(req:Request)
POST    /config/verifyaccountforopenbal                             controllers.ConfigurationController.validateBankCashAccount(req:Request)
# GET     /configSpecificsWS                                          controllers.SpecificsWS.specificssocket()
# GET     /configVendorsWS                                            controllers.VendorWS.vendorsocket()
# GET     /configWorkflowWS                                           controllers.WorkflowWS.workflowsocket()
# GET     /configBranchesWS                                           controllers.BranchWS.branchsocket()
# GET     /configProjectsWS                                           controllers.ProjectWS.projectsocket()
POST    /hiringRequest                                              controllers.RequestHandlerController.handleRequest(req:Request)
POST    /labour/action                                              controllers.LabourController.action(req:Request)
POST    /labour/employeeDetails                                     controllers.LabourController.submitEmployeeDetails(req:Request)
POST    /labour/labourDetails                                       controllers.LabourController.labourDetails(req:Request)
POST    /user/deactivateUser                                        controllers.UserController.deactivateUser(req:Request)
POST    /config/uploadvendors                                       controllers.VendorController.uploadVendors(req:Request)
GET     /notification                                               controllers.NotificationWS.notificationsocket()
GET     /labour/getlabdatas                                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/getCoaChild                                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /expenses/getTransaction                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/getsellreceicve                                     controllers.RequestHandlerController.handleRequest(req:Request)
GET     /config/getdatasellreceicve                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/getVendorData                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/getAlertUser                                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/getHqAlertUser                                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/getCurrency                                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /chartOfAccounts/allChartOfAccounts                         controllers.RequestHandlerController.handleRequest(req: Request)
POST    /chartOfAccounts/allChartOfAccountsLRUCache                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /chartOfAccounts/categoryBasedChartOfAccounts               controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/allUsers                                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/getCashierKl                                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /cashier/configCashCount                                    controllers.RequestHandlerController.handleRequest(req:Request)
POST    /budget/budgetTemplate                                      controllers.BudgetController.budgetTemplate(req : Request)
OPTIONS /budget/budgetTemplate                                      controllers.Application.budgetallow()
POST    /config/uploadbudget                                        controllers.BudgetController.uploadBudget(req:Request)
POST    /config/uploadcustomers                                     controllers.CustomerController.uploadCustomers(req:Request)
POST    /config/uploadRecPayTrans                                   controllers.TransactionExcelController.uploadRecPayTrans(req:Request)
POST    /config/uploadSellTrans                                     controllers.TransactionExcelController.uploadSellTrans(req:Request)
POST    /config/uploadSellOnCashTrans                               controllers.TransactionExcelController.uploadSellOnCashTrans(req:Request)
POST    /config/uploadPayVendTrans                                  controllers.TransactionExcelController.uploadPayVendorTrans(req:Request)
#POST    /config/uploadtransactions                                 controllers.TransactionController.uploadTransactions(req:Request)
POST    /config/uploadbranches                                      controllers.BranchController.uploadBranches(req: Request)
POST    /config/downloadCustomerTemplate                            controllers.CustomerController.downloadCustomerTemplate(req:Request)
POST    /config/downloadTransactionTemplate                         controllers.TransactionExcelController.downloadTransactionTemplate(req:Request)
POST    /config/downloadSellOnCashTransactionTemplate               controllers.TransactionExcelController.downloadSellOnCashTransactionTemplate(req:Request)
POST    /config/downloadRcvPayFromCustomerTransactionTemplate       controllers.TransactionExcelController.downloadRcvPayFromCustomerTransactionTemplate(req:Request)
POST    /config/downloadBuyOnCreditTransactionTemplate              controllers.TransactionExcelController.downloadBuyOnCreditTransactionTemplate(req:Request)
POST    /config/downloadBuyOnCashTransactionTemplate                controllers.TransactionExcelController.downloadBuyOnCashTransactionTemplate(req:Request)
#POST    /config/downloadTransactionExcelData                       controllers.TransactionExcelController.downloadTransactionDataInExcel(req:Request)
POST    /config/downloadPayVendorTransactionTemplate                controllers.TransactionExcelController.downloadPayVendorTransactionTemplate(req:Request)
POST    /tax/addUpdateBranchTax                                     controllers.GstTaxController.addOrUpdateTaxOpeningBalance(req:Request)
POST    /coa/saveInterBranchOpeningBalance                          controllers.InterbranchController.saveOpeningBalance(req:Request)
POST    /config/getBranchIncomesCoa                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /tax/getBranchTaxes                                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /tax/itemTaxDetail                                          controllers.RequestHandlerController.handleRequest(req:Request)
POST    /tax/addBranchSpecificTaxRules                              controllers.RequestHandlerController.handleRequest(req:Request)
POST    /tax/saveUpdateItemsTax                                     controllers.GstTaxController.saveUpdateItemsTaxDetail(req:Request)
POST    /tax/saveinputtaxes                                             controllers.GstTaxController.saveInputTaxBranch(req:Request)
POST    /tax/savercmtaxes                                               controllers.GstTaxController.saveRcmTaxBranch(req:Request)
POST    /tax/taxableItemSave                                            controllers.TaxController.saveTaxableItemsForCompositionScheme(req:Request)
POST    /config/CreateUser                                              controllers.UserController.createUser(req:Request)
#POST   /config/CreateUserSaveCreatorRights                              controllers.UserController.createUserSaveCreatorRights(req:Request)
GET     /tax/showrcmtaxes                                               controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getPOFromKaizala                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getTransactionPurposeItems                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getTxnPurposePjctItemOnBranch                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/fetchItemsForBranchProject                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getTxnBranchSpecificsKL                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getAdvanceDiscount                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/calculateNetAmount                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/calculatePriceForInclusive                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/gettaxandnetamt                                    controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getAdvAdjTax                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/submitForAccounting                                controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/submitForApproval                                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/approverAction                                     controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/showTransactionDetails                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/resubmitForApproval                                controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getBranchInputTaxList                              controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/userTransactions                                          controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/downloadTransaction                                controllers.AccountantTranscationController.downLoadTransactions(req: Request)
POST    /transaction/barcodeItemFetch                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/barcodeFetch                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getAccountingInfo                                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/getParticularsData                                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/getProjectData                                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/getBranchData                                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getCustVendPendingInvoices                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getTxnItemsCustomerVendors                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getAllIncomeItems                                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getinvoiceOutstandings                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getklinvoices                                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/userTxnSearchBased                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /organization/getFinancials                                     controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/userAuditorRemarks                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getprocurementrequest                              controllers.RequestHandlerController.handleRequest(req:Request)
POST    /procure/procureRequest                                         controllers.RequestHandlerController.handleRequest(req:Request)
#POST    /transaction/getprocurementbasedcreatordata                    controllers.TransactionController.procureBasedCreatorData(req:Request)
POST    /vendor/searchVendor                                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /vendor/searchVendorName                                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/updatevendorstatus                                      controllers.VendorController.changeStatus(req:Request)
POST    /customer/searchCustomer                                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /vendor/grantRemoveVendorCustomerAccess                         controllers.VendorController.vendorCustomerAccountLogin(req:Request)
POST    /branch/updateBranchPremiseValidity                             controllers.BranchController.updateBranchPremiseValidity(req: Request)
POST    /branch/updateBranchPremiseRentRenewalDate                      controllers.BranchController.updateBranchPremiseRentRenewalDate(req:Request)
POST    /branch/updateBranchStatutoryValidity                           controllers.BranchController.updateBranchStatutoryValidity(req:Request)
POST    /customer/searchCustomerName                                    controllers.RequestHandlerController.handleRequest(req:Request)
POST    /users/searchUsers                                              controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/vendorSupplierWithholdingData                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /vendorcustomer/transactionsList                                controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/getTxnItemParent                                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /branch/branchPremiseEntityInformation                          controllers.RequestHandlerController.handleRequest(req:Request)
POST    /branch/branchIndividualStatutoryInfo                           controllers.RequestHandlerController.handleRequest(req:Request)
POST    /branch/branchIndividualOperationalRemInfo                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /branch/updateBranchInsurenceValidity                           controllers.BranchController.updateBranchInsurenceValidity(req: Request)
POST    /branch/confirmBranchPremiseRentPayment                         controllers.BranchController.confirmBranchPremiseRentPayment(req:Request)
POST    /branch/confirmBranchOperationalRemAction                       controllers.BranchController.confirmBranchOperationalRemAction(req: Request)
POST    /branch/confirmBranchInsurencePremiumPayment                     controllers.BranchController.confirmBranchInsurencePremiumPayment(req:Request)
POST    /specifics/downloadOrgChartOfAccounts                           controllers.SpecificsController.downloadOrgChartOfAccounts(req:Request)
POST    /exportInvoicePdf                                                   controllers.InvoiceVoucherController.generateInvoice(req:Request)
POST    /exportInvoicePdfForBom                                             controllers.InvoiceVoucherController.generateBomDocs(req:Request)
POST    /exportReceiptPdf                                                   controllers.ReceiptController.generateReceipt(req:Request)
POST    /exportTxnAccountingData                                            controllers.TransactionViewController.getAccountingReport(req:Request)
POST    /branch/branchIndividualPolicyInfo                              controllers.RequestHandlerController.handleRequest(req:Request)
POST    /specifics/searchCoa                                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /specifics/getSupportDocLimit                                    controllers.RequestHandlerController.handleRequest(req:Request)
POST    /shippingAddress                                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /addtionalDetails                                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /organization/getOperationals                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /organization/getRealTimeAlertsInfo                                 controllers.RequestHandlerController.handleRequest(req:Request)
#POST    /returns/getInvoiceReturns                                         controllers.TransactionController.getInvoiceReturns()
POST    /transaction/invoiceData                                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /specialadjustments/vendorProjects                                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /specialadjustments/amountName                                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /cash/transferMainToPetty                                           controllers.RequestHandlerController.handleRequest(req:Request)
POST    /vendorcustomer/acceptTransaction                                   controllers.RequestHandlerController.handleRequest(req:Request)
GET     /subscriberLogin                                                    controllers.RequestHandlerController.handleRequest(req:Request)
GET     /selectsubscription                                                controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/dashboardGetBranchProjectOperation                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/dashboardGetVendorsOrCustomers                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/operationalDataSearch                                    controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/customerwiserProformaInvoice                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/quotationProformabybranch                                controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/quotationProformaItems                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/transactionsforitm                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/custVendOpeningBalanceBreakup                            controllers.DashboardController.custVendOpeningBalanceBreakup(req:Request)
POST    /report/ageing                                                      controllers.AgeingReportController.downloadAgeingRpt(req: Request)
POST    /addNewReportTo                                                     controllers.LabourController.addNewReportsTo(req:Request)
POST    /dashboard/downloadOperationalVendorCustomer                        controllers.DashboardController.downloadOperationalVendorCustomerData(req:Request)
POST    /dashboard/downloadBudgetDetails                                    controllers.DashboardController.downloadBudgetDetails(req:Request)
POST    /sellerSignUp                                                       controllers.ApplicationController.sellerSignUp(req: Request)
POST    /seller/resetPassword                                               controllers.SellerController.resetSellerAcount(req:Request)
POST    /checkSellerEmail                                                   controllers.ApplicationController.checkSellerEmail(req: Request)
GET     /activateSellerAccount                                           controllers.ApplicationController.activateSellerAccount(corporateEmail:String,req:Request)
POST    /sellervendor/itemsPricings                                         controllers.SellerController.listItemsPricings(req:Request)
POST    /transaction/proceedingPettyTxnApproval                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /hiring/listProjectsReportsto                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /cashier/recoincileCashAccount                                     controllers.RequestHandlerController.handleRequest(req:Request)
POST    /cashier/recoincileBankAccountBalance                               controllers.RequestHandlerController.handleRequest(req:Request)
POST    /branch/bankAccountsForPayment                                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/chartOfAccountBreakUps                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/recPayablesOpeningBalAndCurrentYearTotal                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/branchWiseReceivablePayablesGraphData                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/displayBarnchAndPeriodWiseCustVend                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/approverCashBankReceivablePayables                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/branchWiseApproverCashBankReceivablePayables                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/wightedAverageForTransaction                           controllers.RequestHandlerController.handleRequest(req:Request)
POST    /project/searchProject                                              controllers.RequestHandlerController.handleRequest(req:Request)
POST    /vendor/availableLocations                                          controllers.RequestHandlerController.handleRequest(req:Request)
POST    /feedback/submit                                                    controllers.FeedbackController.submit(req:Request)
POST    /feedback/getAreaCodes                                              controllers.FeedbackController.getAreaCodes()
POST    /ecommerce/populateAllPossibleItems                                 controllers.SellerController.populateAllPossibleItems(req:Request)
POST    /ecommerce/itemDataExist                                            controllers.SellerController.supplierItemAlreadyExists(req:Request)
POST    /ecommerce/saveSupplierItemPricings                                 controllers.SellerController.saveSupplierItemPricings(req:Request)
POST    /ecommerce/availableSupplierThanMinWAP                              controllers.SellerController.availableSupplierThanMinWAP(req:Request)
POST    /passwordExpiry/reset                                               controllers.UserController.resetPasswordExpiry(req:Request)
POST    /dashboard/availableLocations                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/plotbranchAggregateData                                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/highestExpenseIncomeBI                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/showPendingTxnDetails                                    controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/customerVendorAdvanceBI                                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/customerVendorAdvanceTransactionBI                       controllers.RequestHandlerController.handleRequest(req:Request)
GET     /config/getbranchadministratordatas                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/taxFormulaValidation                                        controllers.RequestHandlerController.handleRequest(req:Request)
GET     /passwordExpiry                                                     controllers.RequestHandlerController.handleRequest(req:Request)
POST    /accountSetting/getUserDetails                                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /accountSetting/updateUserProfile                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /accountSetting/getUserSecurityQuestions                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /accountSetting/getUserRandomQuestion                               controllers.RequestHandlerController.handleRequest(req:Request)
POST    /accountSetting/saveUserSecurityAnswers                             controllers.AccountSettingsController.saveUserSecurityAnswers(req: Request)
#POST    /accountSetting/userPasswordReset                                  controllers.AccountSettingsController.userPasswordReset(req: Request)
POST    /accountSetting/userPasswordReset                                   controllers.ApplicationController.userPasswordReset(req: Request)
POST    /support/createTicket                                               controllers.SupportTicketController.createSupportTicket(req:Request)
POST    /claims/createExpenseGroup                                          controllers.ClaimController.createExpenseGroup(req:Request)
POST    /claims/createTravelGroup                                           controllers.ClaimController.createTravelGroup(req:Request)
POST    /user/resetSecurityAnswerLink                                       controllers.UserController.resetSecurityAnswerLink(req:Request)
POST    /support/getSupportTicketById                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/getTravelStaticData                                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/getPendingEmployeeClaims                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/getPaidEmployeeClaims                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST     /claims/empPendingClaimSettlement                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/getAvailableExpenseClaimItems                               controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/getAvailableTravelExpenseGroups                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/getSecurityQuestion                                           controllers.RequestHandlerController.handleRequest(req:Request)
POST    /dashboard/getExceedingBudgetDetails                                controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/showTravelGroup                                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/showExpenseGroup                                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/getUserClaimBranchProject                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/getUserRelatedClaimsAvailable                               controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/getSearchCriteriaData                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /labour/getProjectDatas                                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /labour/getJobDetailsDatas                                          controllers.RequestHandlerController.handleRequest(req:Request)
POST    /index/support                                                      controllers.Application.indexSupport(req: Request)
POST    /index/channelPartner                                               controllers.Application.channelPartnerSupport(req: Request)
POST    /labour/searchHiredLabour                                           controllers.LabourController.searchHiredLabour(req:Request)
POST    /support/updateHelp                                                 controllers.SupportTicketController.updateHelpful(req:Request)
POST    /support/updateRate                                                 controllers.SupportTicketController.updateRating(req:Request)
POST    /support/addComment                                                 controllers.SupportTicketController.addComment(req:Request)
POST    /claims/submitForApproval                                           controllers.ClaimController.submitForApproval(req:Request)
POST    /privacy/updateCustomerDetails                                      controllers.AccountSettingsController.saveCustomerProfile(req: Request)
POST    /privacy/updateVendorDetails                                        controllers.AccountSettingsController.saveVendorProfile(req: Request)
POST    /project/getAllHirings                                              controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/checkForDocumentUploadingRule                          controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/checkForDocumentUploadingRulePVS                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/locationOnTravelType                                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/displayTravelEligibility                                    controllers.RequestHandlerController.handleRequest(req:Request)
POST    /support/openCloseIssue                                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/getclaimgstdata                                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /privacy/customerDetails                                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /privacy/vendorDetails                                              controllers.RequestHandlerController.handleRequest(req:Request)
GET     /app/getPhoneCountry                                                controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/approverAction                                              controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/userClaimsTransactions                                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/userAdvancesTxnApprovedButNotAccountedCount                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/exitingClaimsAdvanceTxnRefAndAmount                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/populateUserUnsettledTravelClaimAdvances                    controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/displayUnsettledAdvances                                    controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claims/claimSettlementAccountantAction                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /claimsbranch/bankAccountsForPayment                                controllers.RequestHandlerController.handleRequest(req:Request)

POST    /notes/saveNote                                                     controllers.NotesController.saveNote(req:Request)
POST    /notes/addRemark                                                    controllers.NotesController.addRemark(req:Request)
POST    /expenseclaims/submitForApproval                                    controllers.EmployeeAdvanceForExpensesController.submitForApproval(req:Request)
POST    /notes/getUsersAndProjects                                          controllers.RequestHandlerController.handleRequest(req:Request)
POST    /notes/getNotes                                                     controllers.RequestHandlerController.handleRequest(req:Request)
POST    /notes/getNoteById                                                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /notes/search                                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /advance/userAdvanceForExpenseItems                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /expenseAdvances/displayUserEligibility                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /expenseclaims/showExpenseClaimDetails                              controllers.RequestHandlerController.handleRequest(req:Request)
POST    /advanceExpense/approverAction                                      controllers.RequestHandlerController.handleRequest(req:Request)
POST    /advance/populateUserUnsettledExpenseAdvances                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /advanceExpense/displayUnsettledAdvances                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /advanceExpenses/expAdvanceSettlementAccountantAction               controllers.RequestHandlerController.handleRequest(req:Request)
POST    /reimbursement/getUserExpenseItemReimbursementAmountKl              controllers.RequestHandlerController.handleRequest(req:Request)
POST    /reimbursement/reimbursementApproverAction                          controllers.RequestHandlerController.handleRequest(req:Request)
POST    /notes/count                                                        controllers.RequestHandlerController.handleRequest(req:Request)
#POST    /data/showCOA                                                      controllers.ChartOfAccountsController.showCOA()
POST    /seller/getPricings                                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /seller/getPriceDetails                                             controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/ruleBasedUserExistence                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /data/getCoaForBranch                                               controllers.RequestHandlerController.handleRequest(req:Request)
POST    /data/coaUserBranch                                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /txn/coaUserBranchList                                             controllers.RequestHandlerController.handleRequest(req:Request)
GET     /data/getcoaexpenseitems                                            controllers.RequestHandlerController.handleRequest(req:Request)
GET     /data/getcoaincomeitems                                             controllers.RequestHandlerController.handleRequest(req:Request)
GET     /data/getcoaliabilitiesitems                                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /data/getcoaincomeitemsWithTaxRules                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /data/getcoaExpenceitemsWithTaxRules                                controllers.RequestHandlerController.handleRequest(req:Request)
POST    /data/getcoaexpenceitemsbranchwise                                  controllers.RequestHandlerController.handleRequest(req:Request)
GET     /data/getCoaForOraganization                                        controllers.RequestHandlerController.handleRequest(req:Request)
GET     /data/getcoaunits                                                   controllers.RequestHandlerController.handleRequest(req:Request)
GET     /data/coaPlbsMap                                                    controllers.RequestHandlerController.handleRequest(req:Request)
POST    /officer/getDetails                                                 controllers.RequestHandlerController.handleRequest(req:Request)
POST    /budget/getDetails                                                  controllers.RequestHandlerController.handleRequest(req: Request)
POST    /idos/subscriberNewsBlog                                            controllers.Application.subscribe(req: Request)
POST    /supplier/uploadsupplieritems                                       controllers.SellerController.uploadSupplierItems(req: Request)
POST    /application/generateKey                                            controllers.Application.generateKey(req: Request)
POST    /cashnbank/export                                                   controllers.CashAndBankController.exportCashNBank(req:Request)
POST    /cashnbank/saveTransactionBankDates                                 controllers.CashAndBankController.saveTransBankDate(req:Request)
POST    /files/uploadTxn                                                    controllers.FileUploadController.saveUpdateFileUpload(req:Request)
POST    /trialBalance/exportPDF                                             controllers.TrialBalanceController.exportTrialBalancePDF(req:Request)
POST    /trialBalance/exportLedger                                          controllers.TrialBalanceController.exportTrialBalanceLedger(req: Request)
POST    /files/insertFileLogs                                               controllers.FileUploadController.fileUploadLogs(req:Request)
POST    /files/scan                                                         controllers.FileUploadController.scanVirus(req:Request)
POST    /files/delete                                                       controllers.FileUploadController.delete(req:Request)
POST    /files/deleteUncommittedFiles                                       controllers.FileUploadController.deleteUncommittedFiles(req:Request)
POST    /transactionProvision/approverAction                                controllers.RequestHandlerController.handleRequest(req: Request)
POST    /transactionPayroll/approverAction                                  controllers.RequestHandlerController.handleRequest(req: Request)
POST    /idos/enquiry                                                       controllers.RequestHandlerController.handleRequest(req: Request)
POST    /provisio/accountHeadTransactions                                   controllers.RequestHandlerController.handleRequest(req: Request)
POST    /data/branchBank                                                    controllers.RequestHandlerController.handleRequest(req: Request)
POST    /data/branchBankDetails                                             controllers.RequestHandlerController.handleRequest(req: Request)
GET     /data/orgBanks                                                      controllers.RequestHandlerController.handleRequest(req: Request)
POST    /ecommerce/contactSupplierVendor                                    controllers.RequestHandlerController.handleRequest(req: Request)
POST    /cashnbank/display                                                  controllers.RequestHandlerController.handleRequest(req: Request)
POST    /cashnbank/bankReconciliation                                       controllers.RequestHandlerController.handleRequest(req: Request)
POST    /cashnbank/validateBankDate                                         controllers.RequestHandlerController.handleRequest(req: Request)
POST    /trialBalance/display                                               controllers.RequestHandlerController.handleRequest(req: Request)
GET        /online/getUsers                                                 controllers.RequestHandlerController.handleRequest(req: Request)
POST    /vendorcustomer/search                                              controllers.RequestHandlerController.handleRequest(req: Request)
POST    /claims/search                                                      controllers.RequestHandlerController.handleRequest(req: Request)
POST    /vendorTds/saveAdvanceTds                                           controllers.VendorTDSController.saveVendorAdvanceTds(req:Request)
POST    /vendorTds/saveTdsApplyedTrans                                      controllers.OrganizationController.saveTdsApplicableTrans(req:Request)
POST    /vendorTds/saveBasicTds                                             controllers.VendorTDSController.saveVendorBasicTds(req:Request)
POST    /vendorTds/getBasicRow                                              controllers.RequestHandlerController.handleRequest(req: Request)
POST    /vendorTds/displayTdsDetails                                        controllers.RequestHandlerController.handleRequest(req: Request)
POST    /vendorTds/displayTdsAdvanceDetails                                 controllers.RequestHandlerController.handleRequest(req: Request)
POST    /vendorTds/getAdvanceRow                                            controllers.RequestHandlerController.handleRequest(req: Request)
POST    /vendorTds/getTdsApplyedTrans                                       controllers.RequestHandlerController.handleRequest(req: Request)
POST    /vendorCustomer/statements                                          controllers.RequestHandlerController.handleRequest(req: Request)
POST    /sell/checkMaxDiscountForWalkinCust                                 controllers.RequestHandlerController.handleRequest(req: Request)
GET      /chat/online                                                       controllers.OnlineUsersController.getOnlineOrgUsers(req:Request)
POST    /chat/sendMessage                                                   controllers.OnlineUsersController.sendChatMessage(req:Request)
GET        /chat/searchUser/:search/:skipEmail                              controllers.OnlineUsersController.searchOnlineUser(search: String, skipEmail: String,req:Request)
GET        /chat/history/:month                                             controllers.OnlineUsersController.getChatHistory(month: Integer)
POST    /dashboard/getFinancials                                            controllers.RequestHandlerController.handleRequest(req: Request)
POST    /dashboard/getProjectFinancials                                     controllers.RequestHandlerController.handleRequest(req: Request)
POST    /dashboard/getProjectGraph                                         controllers.RequestHandlerController.handleRequest(req: Request)
POST    /dashboard/getGraph                                                 controllers.RequestHandlerController.handleRequest(req: Request)
POST    /specifics/incomeAvailableStock                                     controllers.RequestHandlerController.handleRequest(req: Request)
POST    /specifics/buyInventoryStockAvailable                               controllers.RequestHandlerController.handleRequest(req: Request)
POST    /specifics/branchSellStockAvailableCombSales                        controllers.RequestHandlerController.handleRequest(req: Request)
POST    /branch/deactivateBranch                                            controllers.BranchController.deactivateBranch(req:Request)
POST    /project/deactivateProject                                          controllers.ProjectController.deactivateProject(req:Request)
POST    /add/vendSupplierLocation                                           controllers.SellerController.addVendSupplierLocation(req:Request)
POST    /export/periodicInventory                                           controllers.StockWarehouseController.exportPeriodicInventory(req:Request)
POST    /export/reportInventory                                             controllers.StockWarehouseController.exportReportInventory(req:Request)
POST    /reportInventory/exportInventory                                    controllers.StockWarehouseController.exportInventory(req:Request)
POST    /periodicInventory/display                                          controllers.RequestHandlerController.handleRequest(req: Request)
POST    /stock/getInventoryItems                                           controllers.RequestHandlerController.handleRequest(req: Request)
POST    /stock/inventoryStockTransferBranches                               controllers.RequestHandlerController.handleRequest(req: Request)
POST    /stock/inventoryStockInBranch                                       controllers.RequestHandlerController.handleRequest(req: Request)
POST    /stock/inventoryToBranches                                          controllers.RequestHandlerController.handleRequest(req: Request)
POST    /reportInventory/display                                            controllers.RequestHandlerController.handleRequest(req: Request)
POST    /reportInventory/displayAllInventory                                controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/uploadBuyOnCashTrans                                        controllers.TransactionExcelController.uploadBuyOnCashTrans(req:Request)
POST    /config/uploadBuyOnCreditTrans                                      controllers.TransactionExcelController.uploadBuyOnCreditTrans(req:Request)
POST    /config/downloadOrgBranchTemplate                                   controllers.BranchController.downloadOrgBranchTemplate(req:Request)
POST    /config/downloadOrgVendorTemplate                                   controllers.VendorController.downloadOrgVendorTemplate(req:Request)
POST    /user/downloadOverUnderOneEightyDayaTxnExcel                        controllers.TransactionController.downloadOverUnderOneEightyDayaTxnExcel(req:Request)
POST    /transaction/getReverseChargeTaxforTypeOfSupply                     controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/branchCustomerVendorReceivablePayables                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /user/overUnderOneEightyReceivablePayablesTxn                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transaction/rcmItems                                               controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transactionItems/getListOfMultipleItems                            controllers.RequestHandlerController.handleRequest(req:Request)
POST    /transactionItems/getPayrollItems                                   controllers.RequestHandlerController.handleRequest(req:Request)
POST    /config/getSelectedExpenseItemUnit                                  controllers.RequestHandlerController.handleRequest(req:Request)
POST    /reportInventory/midInventory                                       controllers.RequestHandlerController.handleRequest(req:Request)
POST    /reportInventory/displayDetailInventory                             controllers.RequestHandlerController.handleRequest(req:Request)

# GST urls
POST    /GSTController/searchGSTItemBasedOnDesc                             controllers.RequestHandlerController.handleRequest(req:Request)

# api urls
POST    /trialBalance/downloadTrialBalance                                  controllers.TrialBalanceController.downloadTrialBalance(req:Request)
OPTIONS /trialBalance/downloadTrialBalance                                  controllers.Application.trialbalanceallow()
POST    /recruitment/downloadOpenPositions                                  controllers.RecruitmentController.listOpenPositionExcel(req:Request)
OPTIONS /recruitment/downloadOpenPositions                                  controllers.Application.recruitmentallowExcel()
POST    /trialBalance/getTrialBalance                                       controllers.RequestHandlerController.handleRequest(req:Request)
OPTIONS /trialBalance/getTrialBalance                                       controllers.Application.gettrialbalanceallow()
POST    /recruitment/listOpenPositions                                      controllers.RequestHandlerController.handleRequest(req:Request)
OPTIONS /recruitment/listOpenPositions                                      controllers.Application.recruitmentallowJSON()

# TrialBalance search
POST    /config/getParticularsForOrg                                         controllers.RequestHandlerController.handleRequest(req:Request)
# POST    /config/getParticularsForOrg                                       controllers.SpecificsController.getParticularsForOrg(req:Request)

POST    /profitLoss/saveupdateinventory                                     controllers.ProfitLoss.ProfitLossController.saveUpdateInventoryData(req:Request)
POST    /balanceSheet/export                                                controllers.BalanceSheet.BalanceSheetController.downloadBS(req:Request)
POST    /profitLoss/export                                                  controllers.ProfitLoss.ProfitLossController.downloadPnL(req:Request)
POST    /profitLoss/display                                                 controllers.RequestHandlerController.handleRequest(req:Request)
GET     /profitLoss/displayinventory                                        controllers.RequestHandlerController.handleRequest(req:Request)
POST    /balanceSheet/display                                               controllers.RequestHandlerController.handleRequest(req:Request)

# PL BS - COA Mapper
POST    /plbscoa/map                                                        controllers.PLBSCOAMapper.PLBSCOAMapperController.mapPLBSItemsToCOA(req:Request)
GET     /plbscoa/fetch                                                      controllers.RequestHandlerController.handleRequest(req: Request)

# officeAddIn urls
POST    /transaction/loginFromAddIn                                        controllers.RequestHandlerController.handleRequest(req: Request)
POST    /transaction/branchwisesales                                       controllers.RequestHandlerController.handleRequest(req: Request)
POST    /transaction/branchwiseexpense                                     controllers.RequestHandlerController.handleRequest(req: Request)
POST    /transaction/branchwisecustomeradvance                             controllers.RequestHandlerController.handleRequest(req: Request)
POST    /transaction/branchwisevendoradvance                               controllers.RequestHandlerController.handleRequest(req: Request)
POST    /ledger/itemtransactions                                           controllers.RequestHandlerController.handleRequest(req: Request)

# Karvy URLS
POST    /send/submitTransactionsToKarvy                                    controllers.Karvy.KarvyAuthorization.submitTransactionsToKarvy(req:Request)
POST    /config/downloadKarvyGSTR1JSONSFile                                controllers.Gstr.Gstr1JsonForKarvyController.downloadKarvyGSTR1JSONSFile(req:Request)
#POST       /config/signupForKarvygst                                      controllers.Karvy.KarvyAuthorization.signupForKarvyGST()
POST   /config/downloadKarvyGSTR1JSONSFileForKarvy                         controllers.Gstr.Gstr1JsonForKarvyController.downloadGSTR1JSONSFileForKarvy(req:Request)
POST   /config/downloadKarvyGSTR1JSONSFileForOtherTransactionsKarvy        controllers.Gstr.Gstr1JsonForKarvyController.downloadKarvyGSTR1JSONSFileForOtherTransactionsKarvy(req:Request)
POST   /config/downloadKarvyGSTR4JSONSFileForKarvy                         controllers.Gstr.Gstr4JsonDownloadController.downloadGSTR4JSONSFileForKarvy(req:Request)
POST   /config/downloadKarvyGSTR2JSONSFileForKarvy                         controllers.Gstr.Gstr2JsonDownloadController.downloadGSTR2JSONSFileForKarvy(req:Request)
POST   /data/dlGstr3b                                                      controllers.Gstr.Gstr3bJsonController.downloadGSTR3BJSONSFile(req:Request)
POST    /config/callKARVYUrl                                               controllers.RequestHandlerController.handleRequest(req: Request)
POST   /config/getbranchlist                                               controllers.RequestHandlerController.handleRequest(req: Request)
POST   /config/getturnover                                                 controllers.RequestHandlerController.handleRequest(req: Request)
POST   /config/getGSTR3BDataForKarvy                                       controllers.RequestHandlerController.handleRequest(req: Request)
POST   /config/getStatewiseDataForKarvy                                    controllers.RequestHandlerController.handleRequest(req: Request)

# EXTERNAL USER URLS
GET        /externalUserSignUp                                             controllers.Karvy.ExternalUserLoginController.externalUserSignUp(req:Request)
GET        /externalLogin                                                  controllers.Karvy.ExternalUserLoginController.externalLogin(req:Request)
POST    /externalUser/loginToOrg                                           controllers.SecurityController.loginToOrg(req: Request)
POST    /config/addExternalUser                                            controllers.Karvy.ExternalUserLoginController.addExternalUser(req:Request)
POST    /externalUser/submitForAccessApproval                              controllers.Karvy.ExternalUserLoginController.submitForAccessApproval(req:Request)
POST    /externalUser/addcompanyList                                       controllers.Karvy.ExternalUserLoginController.externalUserCompanyToBeAdded(req:Request)
POST    /externalUser/deactivate/:id                                       controllers.Karvy.ExternalUserLoginController.deactivateExtUser(id: Long,req:Request)
POST    /externalUser/provideAccess/:id                                    controllers.Karvy.ExternalUserLoginController.provideAccessToExtUser(id: Long,req:Request)
POST    /externalUser/addExtUserToOrgViaOtp                                controllers.Karvy.ExternalUserLoginController.addExtUserToOrgViaOtp(req:Request)
POST    /logoutExtUser                                                     controllers.Karvy.ExternalUserLoginController.logoutExtUser(req:Request)
GET        /externalUser/confirmAccess                                     controllers.Karvy.ExternalUserLoginController.confirmAccess(extUserId: String, orgId: String,req:Request)
GET        /externalUserConfig                                             controllers.RequestHandlerController.handleRequest(req: Request)
POST    /externalUser/companyList                                          controllers.RequestHandlerController.handleRequest(req: Request)
POST    /externalUserList/allUsers                                        controllers.RequestHandlerController.handleRequest(req: Request)
POST    /externalUser/showExtUserDetails                                   controllers.RequestHandlerController.handleRequest(req: Request)

# PWC URLS
POST    /config/downloadTransactionDataFile                  controllers.PWC.GstReturnsController.downloadTransactionDataInFile(req:Request)
POST    /config/downloadBuyTransactionDataFile               controllers.PWC.GstReturnsController.downloadBuyTransactionDataInFile(req:Request)
POST    /config/callPWCGBIUrl                                controllers.PWC.GstReturnsController.callPWCGBIUrl(req:Request)

# Payroll URLS
POST    /payroll/addPayrollSetupItems                         controllers.payroll.PayrollController.addPayrollSetup(req:Request)
POST    /payroll/saveUserPayrollItems                         controllers.payroll.PayrollController.saveUserPayrollItems(req:Request)
POST    /payroll/addPayrollMonthlyPaySlips                    controllers.payroll.PayrollController.addPayrollMonthlyPaySlips(req:Request)
POST    /transaction/downloadTDSReportFile                    controllers.TDSReportController.generateTDSReport(req: Request)
POST    /bom/saveupdate                                       controllers.BillOfMaterialController.save(req: Request)
GET     /bom/getdetail/:entityid                              controllers.BillOfMaterialController.getDetail(entityid : Long,req: Request)
GET     /bom/getbyincome/:branch/:entityid                    controllers.BillOfMaterialController.getBillOfMaterialByIncomeItem(branch: Long, entityid : Long,req : Request)
GET     /bom/getTxnDetail/:entityid/:branchid/:vendorid/:ischeck         controllers.BillOfMaterialTxnController.getBomTxnDetail(entityid : Long, branchid : Long, vendorid : Long, ischeck : Integer,req : Request)
GET     /bom/unfulfilled/:entityid/:branchid                  controllers.BillOfMaterialTxnController.getUnfulfilledUnitsOfItem(entityid : Long, branchid : Long,req: Request)
POST    /payroll/savePayrollOpeningBalance                    controllers.payroll.PayrollController.savePayrollOpeningBalance(req:Request)
POST    /payroll/showPayrollSetupItems                        controllers.RequestHandlerController.handleRequest(req: Request)
POST    /payroll/getUserEarningsData                          controllers.RequestHandlerController.handleRequest(req:Request)
POST    /payroll/getUserDeductionData                         controllers.RequestHandlerController.handleRequest(req:Request)
POST    /payroll/getTransactionPayrollData                    controllers.RequestHandlerController.handleRequest(req: Request)
POST    /payroll/getPayrollOpeningBalance                     controllers.RequestHandlerController.handleRequest(req: Request)
POST    /payroll/generatePayslip                              controllers.RequestHandlerController.handleRequest(req: Request)
GET     /payroll/getCashBalance                              controllers.RequestHandlerController.handleRequest(req: Request)
GET     /payroll/payslipHistory                               controllers.RequestHandlerController.handleRequest(req: Request)
POST    /payroll/payslipForMonth                             controllers.RequestHandlerController.handleRequest(req: Request)
POST    /transactionProvision/getProvisionJournalEntryDetails controllers.RequestHandlerController.handleRequest(req: Request)
GET     /bom/getbyorg                                         controllers.RequestHandlerController.handleRequest(req: Request)
POST    /bom/incomeitemsbybranch                              controllers.RequestHandlerController.handleRequest(req: Request)
POST    /bom/bomDetailsByExpence                              controllers.RequestHandlerController.handleRequest(req: Request)
POST    /bom/notaccountedbomtxnlist                           controllers.RequestHandlerController.handleRequest(req: Request)

# POST    /data/uploadcsv/:uploadType                           controllers.upload.CsvFileController.uploadCsv(uploadType: String)
# GET     /data/txntmplt                                        controllers.upload.CsvFileController.downloadTxnTemplate()

# Upto here completed tread safe

# Utility Mappings
GET     /config/roundup/:orgId                                controllers.TrialBalanceUtilityController.saveRoundupTrialBalanceForOrgAndBranch(orgId : Long)

# Single Sign On
GET     /pwc/authorization                        controllers.ApplicationController.ssoAuthorization(req:Request)
GET     /pwc/callback                             controllers.ApplicationController.ssoCallback(req:Request)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                         controllers.Assets.at(path="/public", file)
GET     /files/:fileName                               controllers.RequestHandlerController.handleFileRequest(req: Request, fileName: String)


# SSO login														
POST    /getPWCUsers                                            controllers.RequestHandlerController.handleRequest(req: Request)

# New BOM
POST    /bom/saveorupdate                                       controllers.RequestHandlerController.handleRequest(req: Request)
GET     /bom/getbyorganization                                  controllers.RequestHandlerController.handleRequest(req: Request)
GET     /bom/getdetails/:entityid                              	controllers.BOMController.getDetail(req: Request, entityid: Long)

GET     /transactions/purchaseRequisitionList                		controllers.RequestHandlerController.handleRequest(req: Request)
GET     /transactions/purchaseRequisitionItemsList/:purReqId        controllers.TransactionController.getPurchaseRequisitionItemList(req: Request, purReqId: Long)
GET     /transactions/purchaseRequisitionListByBranchIdAndProjectId/:branchId/:projectId     controllers.TransactionController.getPurchaseRequisitionByBranchAndProject(req: Request, branchId: Long, projectId: Long)
GET     /transactions/purchaseOrderListByBranchIdAndProjectId/:branchId/:projectId      controllers.TransactionController.getPurchaseOrderByBranchAndProject(req: Request, branchId: Long, projectId: Long)
